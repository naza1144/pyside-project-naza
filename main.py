import streamlit as st
import os
import json
from ollama_service import get_ollama_response

st.markdown("""
    <style>
        .chat-container {
            max-height: 500px;
            overflow-y: auto;
            padding: 10px;
        }
    </style>
""", unsafe_allow_html=True)

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏ä‡∏ó‡πÄ‡∏Å‡πà‡∏≤
CHAT_HISTORY_DIR = "chat_history"
if not os.path.exists(CHAT_HISTORY_DIR):
    os.makedirs(CHAT_HISTORY_DIR)

# ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏ä‡∏ó‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
chat_files = [f.replace(".json", "") for f in os.listdir(CHAT_HISTORY_DIR) if f.endswith(".json")]

# Sidebar: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ä‡∏ó‡πÄ‡∏Å‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
st.sidebar.title("üìÇ ‡πÅ‡∏ä‡∏ó‡πÄ‡∏Å‡πà‡∏≤")
selected_chat = st.sidebar.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏ä‡∏ó", ["‚ûï ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà"] + chat_files)

# ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡πÅ‡∏ä‡∏ó
if selected_chat != "‚ûï ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà":
    if st.sidebar.button("üóëÔ∏è ‡∏•‡∏ö‡πÅ‡∏ä‡∏ó‡∏ô‡∏µ‡πâ"):
        os.remove(os.path.join(CHAT_HISTORY_DIR, f"{selected_chat}.json"))
        st.rerun()

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏ä‡∏ó
def load_chat_history(chat_name):
    file_path = os.path.join(CHAT_HISTORY_DIR, f"{chat_name}.json")
    if os.path.exists(file_path):
        with open(file_path, "r", encoding="utf-8") as file:
            return json.load(file)
    return []

def save_chat_history(chat_name, messages):
    file_path = os.path.join(CHAT_HISTORY_DIR, f"{chat_name}.json")
    with open(file_path, "w", encoding="utf-8") as file:
        json.dump(messages, file, ensure_ascii=False, indent=4)

# ‡∏Å‡∏£‡∏ì‡∏µ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà
if selected_chat == "‚ûï ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà":
    new_chat_name = st.sidebar.text_input("‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà")
    if st.sidebar.button("‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á"):
        if new_chat_name:
            new_chat_file = os.path.join(CHAT_HISTORY_DIR, f"{new_chat_name}.json")
            with open(new_chat_file, "w", encoding="utf-8") as file:
                json.dump([], file, ensure_ascii=False, indent=4)
            st.rerun()

# ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏ä‡∏ó‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
if "messages" not in st.session_state:
    st.session_state.messages = []

if selected_chat != "‚ûï ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà":
    st.session_state.messages = load_chat_history(selected_chat)

st.title(f"DeepSeek-r1: {selected_chat if selected_chat != '‚ûï ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà' else'‚ï∞(*¬∞‚ñΩ¬∞*)‚ïØ' }")

# ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ä‡∏ó‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏î‡∏π‡πÑ‡∏î‡πâ
with st.container():
    chat_box = st.container()
    with chat_box:
        for role, content in st.session_state.messages:
            with st.chat_message(role):
                st.markdown(content)

# ‡∏ä‡πà‡∏≠‡∏á‡∏õ‡πâ‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
user_input = st.chat_input("‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà...")

if user_input:
    # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
    st.session_state.messages.append(("user", user_input))
    with chat_box:
        with st.chat_message("user"):
            st.markdown(user_input)

    # ‡πÉ‡∏ä‡πâ spinner ‡∏Ç‡∏ì‡∏∞‡∏£‡∏≠‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    with st.spinner("ü§ñ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏¥‡∏î..."):
        response = get_ollama_response(user_input)

    # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å AI
    st.session_state.messages.append(("assistant", response))
    with chat_box:
        with st.chat_message("assistant"):
            st.markdown(response)

    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏ä‡∏ó
    if selected_chat != "‚ûï ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ä‡∏ó‡πÉ‡∏´‡∏°‡πà":
        save_chat_history(selected_chat, st.session_state.messages)

    st.rerun()  # ‡∏£‡∏µ‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏õ‡∏£‡∏≤‡∏Å‡∏è